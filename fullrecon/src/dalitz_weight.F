C $Id: dalitz_weight.F 9948 2006-12-05 06:11:00Z katayama $

      FUNCTION WEIGHT(M0,KPI,KPI0)
C
C     ADAPTED FROM A ROUTINE
C     WRITTEN BY MILIND PUROHIT, SEPTEMBER 1992
C
C     FOR THE K- PI+ PI0 DECAY MODE OF THE D0 MESON
C
C     RETURNS |AMPLITUDE|**2 FOR DECAY GIVEN THE MASS-SQUAREDS ON THE
C     TWO DALITZ-PLOT AXES
C
C     M0   IS THE INVARIANT MASS         OF THE D0     in (GeV/c^2)
C     KPI  IS THE INVARIANT MASS SQUARED OF THE K- PI+ in (GeV/c^2)^2
C     KPI0 IS THE INVARIANT MASS SQUARED OF THE K- PI0 in (GeV/c^2)^2
C
C     RETURNS VALUE OF WEIGHT AT POINT (KPI,KPI0) ON THE DALITZ PLOT
C
      IMPLICIT NONE
      EXTERNAL IDEBUGOUT
      INTEGER IDEBUGOUT

CCC#include "seq/clinc/clevc100.inc"
      COMPLEX SIGXY
      REAL GAMA2, BWMS2, GAMA3, BWMS3, GAMA4
      REAL BWMS4,PI,TWOPI,PI180
      REAL M0, M1, M2, M3
      REAL WEIGHT
C
C     THE FOLLOWING ARE WIDTH/MASS DEFINITIONS FOR THE RESONANCES.
C     ALL MASSES/WIDTHS TAKEN FROM 7/98 PPDB
C       THEY ARE NUMBERED AS FOLLOWS :
C           GAMA2, BWMS2    K* ( 892)
C               3,     3    K* ( 892)-
C               4,     4    RHO( 770)+
C
      PARAMETER  (
     A      PI = 3.141592654,
     A   TWOPI = 2.*PI,
     A   PI180 = PI/180.,
     A      M1 = 0.4936770,
     A      M2 = 0.13956995,
     A      M3 = 0.1349764,
     A      GAMA2  = .0508, BWMS2  =  .89610,
     A      GAMA3  = .0505, BWMS3  =  .89166,
     A      GAMA4  = .1507, BWMS4  =  .7700
     A            )
 
      INTEGER PP, J
C
C     CX1,CX2,X1 ARE SCRATCH VARIABLES FOR GENERAL USE.
C
      REAL X1
      REAL KPI, KPI0
      REAL CS1,CS2,CS3,E1,E2,E3,P1,P2,P3
      REAL M12,M13,M23,M12SQ,M13SQ,M23SQ
      REAL FACT
      COMPLEX CX1,CX2
 
      REAL DALPAR(8)
      LOGICAL INIT
      REAL MSQSUM, M0MNM1, M0MNM2, M0MNM3, M1MNM3, M2MNM3, M2MNM1
     A    ,M0SQRD, M1SQRD, M2SQRD, M3SQRD, MSUM12, MSUM13, MSUM23
      SAVE DALPAR,INIT
     A    ,MSQSUM, M0MNM1, M0MNM2, M0MNM3, M1MNM3, M2MNM3, M2MNM1
     A    ,M0SQRD, M1SQRD, M2SQRD, M3SQRD, MSUM12, MSUM13, MSUM23
 
      DATA DALPAR/
     A    0.0000,   1.0000
     A, 147.6830,   3.5593
     A,-128.9271,   3.0683
     A,   9.7786,   8.9489/
      DATA INIT/.FALSE./
 
C     Initializations which do not depend on M0.

C      write(6,1234) M0,KPI,KPI0
C 1234 format(' ','in f77:  1: ',f15.8,'  2: ',f15.8,'  3: ',f15.8)

C      PRINT *, INIT, RUNN, EVNT
      IF(.NOT.INIT)THEN
 
        M2MNM3 = M2**2 - M3**2
        M1MNM3 = M1**2 - M3**2
        M2MNM1 = M2**2 - M1**2
 
        M1SQRD = M1**2
        M2SQRD = M2**2
        M3SQRD = M3**2
 
        MSUM12 = M1SQRD + M2SQRD
        MSUM13 = M1SQRD + M3SQRD
        MSUM23 = M2SQRD + M3SQRD
 
        INIT = .TRUE.
      ENDIF

C     Initializations which do depend on M0.
      MSQSUM = M0**2 + M1**2 + M2**2 + M3**2
      M0SQRD = M0**2
      M0MNM1 = M0SQRD - M1SQRD
      M0MNM2 = M0SQRD - M2SQRD
      M0MNM3 = M0SQRD - M3SQRD
 
C     Calculate masses from x,y
      M12SQ = KPI
      M13SQ = KPI0
      M23SQ = MSQSUM - KPI - KPI0
 
C      PRINT *, M12SQ,M13SQ,M23SQ
      M12 = SQRT(M12SQ)
      M13 = SQRT(M13SQ)
      M23 = SQRT(M23SQ)

C
C     CALCULATE COSINE OF ANGLES BETWEEN PARTICLE I AND J IN
C     REST FRAME OF PARTICLE I+K (K=THIRD PARTICLE).  RESULT
C     IS CALLED CSJ.
C     CS1 IS THE ANGLE 1 MAKES WITH 2 IN THE REST FRAME OF 23
C     CS2 IS THE ANGLE 2 MAKES WITH 1 IN THE REST FRAME OF 13
C     CS3 IS THE ANGLE 3 MAKES WITH 2 IN THE REST FRAME OF 12
C
C     OBVIOUSLY, IF YOU WANT CS2 TO MEAN THE COSINE OF THE ANGLE
C     2 MAKES WITH 3 IN THE REST FRAME OF 13, YOU SHOULD USE -CS2
C

      FACT = 0.5/M23
      E1 = (M0MNM1 - M23SQ )*FACT
      E2 = (M23SQ  + M2MNM3)*FACT
      P1 = SQRT(ABS(E1**2 - M1SQRD))
      P2 = SQRT(ABS(E2**2 - M2SQRD))
      CS1 = (MSUM12 + 2.*E1*E2 - M12SQ)/(2.*P1*P2)
 
      FACT = 0.5/M13
      E2 = (M0MNM2 - M13SQ )*FACT
      E1 = (M13SQ  + M1MNM3)*FACT
      P2 = SQRT(ABS(E2**2 - M2SQRD))
      P1 = SQRT(ABS(E1**2 - M1SQRD))
      CS2 = (MSUM12 + 2.*E1*E2 - M12SQ)/(2.*P1*P2)
 
      FACT = 0.5/M12
      E3 = (M0MNM3 - M12SQ )*FACT
      E2 = (M12SQ  + M2MNM1)*FACT
      P3 = SQRT(ABS(E3**2 - M3SQRD))
      P2 = SQRT(ABS(E2**2 - M2SQRD))
      CS3 = (MSUM23 + 2.*E3*E2 - M23SQ)/(2.*P3*P2)
 
      SIGXY = CMPLX(0.,0.)
C
C     PP POINTS TO THE LAST USED ELEMENT OF THE DALPAR(1..NPARDL) ARRAY
C
      PP = 0
      J = 0
7     J = J+1
      IF (J.GT.4) THEN
      WEIGHT = (CABS(SIGXY))**2
      RETURN
      ENDIF
      GO TO ( 100, 200, 300, 400),J
 
100   CONTINUE
C THREE BODY NORMALIZED OVER DALITZ PLOT:
      X1 = DALPAR(PP+1)*PI180
      CX1 = CMPLX(0.,X1)
      SIGXY = SIGXY + DALPAR(PP+2)*CEXP(CX1)
      PP=PP+2
      GO TO 7
 
200   CONTINUE
C K* ( 892) --> K- PI+ MODE:
      X1 = DALPAR(PP+1)*PI180
      CX1 = CMPLX(0.,X1)
      CX2 = CMPLX(0.,GAMA2/2)
      SIGXY = SIGXY + DALPAR(PP+2)*CS3*SQRT(GAMA2/(TWOPI))*
     ACEXP(CX1)/( (M12-BWMS2) - CX2 )
      PP=PP+2
      GO TO 7
 
300   CONTINUE
C K* ( 892)- --> K- PI0 MODE:
      X1 = DALPAR(PP+1)*PI180
      CX1 = CMPLX(0.,X1)
      CX2 = CMPLX(0.,GAMA3/2)
      SIGXY = SIGXY + DALPAR(PP+2)*CS2*SQRT(GAMA3/(TWOPI))*
     ACEXP(CX1)/( (M13-BWMS3) - CX2 )
      PP=PP+2
      GO TO 7
 
400   CONTINUE
C RHO(770)+ --> PI+ PI0 MODE:
      X1 = DALPAR(PP+1)*PI180
      CX1 = CMPLX(0.,X1)
      CX2 = CMPLX(0.,GAMA4/2)
      SIGXY = SIGXY + DALPAR(PP+2)*CS1*SQRT(GAMA4/TWOPI)*
     ACEXP(CX1)/( (M23-BWMS4) - CX2 )
      PP=PP+2
      GO TO 7
 
      END

